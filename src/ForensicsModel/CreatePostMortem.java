/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ForensicsModel;


import ForensicsModel.PostMortem;
import ForensicsModel.PostMortemHistory;
import javax.swing.JOptionPane;


public class CreatePostMortem extends javax.swing.JPanel {

    PostMortemHistory pmHistory;
    DatabaseConnection_postMortem dbConPostMortemDetails;
    
    public CreatePostMortem(PostMortemHistory pmHistory ) {
        initComponents();
        
        this.pmHistory = pmHistory;
        dbConPostMortemDetails = new DatabaseConnection_postMortem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbPmId = new javax.swing.JLabel();
        txtPmId = new javax.swing.JTextField();
        lbDate = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lbDocId = new javax.swing.JLabel();
        txtDocId = new javax.swing.JTextField();
        txtDeathDate = new javax.swing.JTextField();
        lbBodyName = new javax.swing.JLabel();
        lbCauseOfDeath = new javax.swing.JLabel();
        txtBodyName = new javax.swing.JTextField();
        txtCauseOfDeath = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        lbCaseId = new javax.swing.JLabel();
        txtCaseId = new javax.swing.JTextField();
        lbDeathDate = new javax.swing.JLabel();
        lbTitle = new javax.swing.JLabel();
        lbFP = new javax.swing.JLabel();
        txtFP = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 0, 0));

        lbPmId.setForeground(new java.awt.Color(255, 255, 255));
        lbPmId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPmId.setText("Post Mortem Id");

        lbDate.setForeground(new java.awt.Color(255, 255, 255));
        lbDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDate.setText("Date");

        btnSave.setBackground(new java.awt.Color(204, 204, 204));
        btnSave.setText("Save ");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lbDocId.setForeground(new java.awt.Color(255, 255, 255));
        lbDocId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDocId.setText("Doctor Id");

        txtDocId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocIdActionPerformed(evt);
            }
        });

        txtDeathDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeathDateActionPerformed(evt);
            }
        });

        lbBodyName.setForeground(new java.awt.Color(255, 255, 255));
        lbBodyName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBodyName.setText("Body Name");

        lbCauseOfDeath.setForeground(new java.awt.Color(255, 255, 255));
        lbCauseOfDeath.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCauseOfDeath.setText("Cause of Death");

        txtBodyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBodyNameActionPerformed(evt);
            }
        });

        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        lbCaseId.setForeground(new java.awt.Color(255, 255, 255));
        lbCaseId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCaseId.setText("Case Id");

        txtCaseId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaseIdActionPerformed(evt);
            }
        });

        lbDeathDate.setForeground(new java.awt.Color(255, 255, 255));
        lbDeathDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDeathDate.setText("Death Date");

        lbTitle.setFont(new java.awt.Font("Century", 1, 24)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(255, 255, 255));
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Post Mortem Form");

        lbFP.setForeground(new java.awt.Color(255, 255, 255));
        lbFP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbFP.setText("Finger Print");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(183, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFP, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFP, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbPmId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbCaseId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbDocId, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(16, 16, 16)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDocId, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPmId)
                                    .addComponent(txtDate)
                                    .addComponent(txtCaseId, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lbBodyName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbDeathDate, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(16, 16, 16)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDeathDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBodyName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbCauseOfDeath, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtCauseOfDeath, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(141, 141, 141))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lbTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPmId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPmId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDate, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDocId, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDocId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCaseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCaseId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBodyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBodyName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDeathDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDeathDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCauseOfDeath, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCauseOfDeath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        boolean isValid = Validation();
        if (isValid) {
        int pmId = Integer.parseInt(txtPmId.getText());
        String date = txtDate.getText();
        int docId = Integer.parseInt(txtDocId.getText());
        int caseId = Integer.parseInt(txtCaseId.getText());
        String bodyName = txtBodyName.getText();
        String deathDate = txtDeathDate.getText();
        String causeOfDeath = txtCauseOfDeath.getText();
        int fingerPrint = Integer.parseInt(txtFP.getText());

        
        PostMortem p = pmHistory.addNewPM();
        
        p.setPmId(pmId);
        p.setDate(date);
        p.setDocId(docId);
        p.setCaseId(caseId);
        p.setBodyName(bodyName);
        p.setDeathDate(deathDate);
        p.setCauseOfDeath(causeOfDeath);
        p.setFingerPrint(fingerPrint);
        
        dbConPostMortemDetails.addPostMortemDataToDB(p);
        JOptionPane.showMessageDialog(this, "Post Mortem report is added.");

        txtPmId.setText("");
        txtDate.setText("");
        txtDocId.setText("");
        txtCaseId.setText(""); 
        txtBodyName.setText("");
        txtDeathDate.setText("");
        txtCauseOfDeath.setText("");
        txtFP.setText("");
        }         
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtDocIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocIdActionPerformed

    private void txtDeathDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeathDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeathDateActionPerformed

    private void txtBodyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBodyNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBodyNameActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void txtCaseIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCaseIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCaseIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lbBodyName;
    private javax.swing.JLabel lbCaseId;
    private javax.swing.JLabel lbCauseOfDeath;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbDeathDate;
    private javax.swing.JLabel lbDocId;
    private javax.swing.JLabel lbFP;
    private javax.swing.JLabel lbPmId;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTextField txtBodyName;
    private javax.swing.JTextField txtCaseId;
    private javax.swing.JTextField txtCauseOfDeath;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDeathDate;
    private javax.swing.JTextField txtDocId;
    private javax.swing.JTextField txtFP;
    private javax.swing.JTextField txtPmId;
    // End of variables declaration//GEN-END:variables

    private boolean Validation() {
    
        try {
        Integer.parseInt(txtPmId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Post Mortem Id");
        }
        
        if (txtPmId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Post Mortem ID");
            return false;
        }
        
        if (txtDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Date");
            return false;
        } else {
            if (!(txtDate.getText().matches("^(1[0-2]|0[1-9])/(3[01]|[12][0-9]|0[1-9])/[0-9]{4}$"))) {
                JOptionPane.showMessageDialog(this, "Please enter Date Format mm/dd/yyyy");
                return false;
            }
        }
        
        try {
        Integer.parseInt(txtDocId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Id");
            
        }
        

        if (txtDocId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Doctor ID");
            return false;
        } else {
            if (txtDocId.getText().length() != 3) {
                JOptionPane.showMessageDialog(this, "Doctor ID should be only 3 digits");
                return false;
            }
        }
        
        try {
        Integer.parseInt(txtCaseId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Case Id");
        }
        
        if (txtCaseId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Case ID");
            return false;
        }
    
        if (txtBodyName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Body Name");
            return false;
        } else {
            if (!(txtBodyName.getText().matches("[a-zA-Z]*[\\s]{1}[a-zA-Z].*"))) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Body Name");
                return false;
            }
        }
                
        
        if (txtDeathDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Death Date");
            return false;
        } else {
            if (!(txtDeathDate.getText().matches("^(1[0-2]|0[1-9])/(3[01]|[12][0-9]|0[1-9])/[0-9]{4}$"))) {
                JOptionPane.showMessageDialog(this, "Please enter Date Format mm/dd/yyyy");
                return false;
            }
        }
        
        if (txtCauseOfDeath.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Cause of Death");
            return false;
        } else {
            if (!(txtCauseOfDeath.getText().matches("[a-zA-Z]*[\\s]{1}[a-zA-Z].*"))) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Cause of Death");
                return false;
            }
        }
        return true;
    }
}
