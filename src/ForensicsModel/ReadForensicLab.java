/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ForensicsModel;

import ForensicsModel.ForensicLab;
import ForensicsModel.ForensicLabHistory;
import ForensicsModel.Hospital;
import ForensicsModel.hospitalDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ReadForensicLab extends javax.swing.JPanel {

    ForensicLabHistory forLabHistory;
    public ReadForensicLab(ForensicLabHistory forLabHistory) {
        initComponents();
        this.forLabHistory = forLabHistory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        HTable = new javax.swing.JTable();
        lbTitle = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lbHosptId = new javax.swing.JLabel();
        txtHospId = new javax.swing.JTextField();
        lbHospName = new javax.swing.JLabel();
        txtHospName = new javax.swing.JTextField();
        lbForLabId = new javax.swing.JLabel();
        txtForLabId = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 204, 255));

        HTable.setBackground(java.awt.SystemColor.controlHighlight);
        HTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Forensic Lab Id", "Hospital Id", "Hospital Name"
            }
        ));
        jScrollPane1.setViewportView(HTable);

        lbTitle.setFont(new java.awt.Font("Century", 1, 24)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(0, 204, 255));
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("View Forensic Labs");

        btnUpdate.setBackground(new java.awt.Color(204, 204, 204));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnView.setBackground(new java.awt.Color(204, 204, 204));
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 204, 204));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lbHosptId.setForeground(new java.awt.Color(255, 255, 255));
        lbHosptId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbHosptId.setText("Hospital Id");

        lbHospName.setForeground(new java.awt.Color(255, 255, 255));
        lbHospName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbHospName.setText("Hospital Name");

        txtHospName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospNameActionPerformed(evt);
            }
        });

        lbForLabId.setForeground(new java.awt.Color(255, 255, 255));
        lbForLabId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbForLabId.setText(" Forensic Lab Id");

        txtForLabId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtForLabIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(245, 245, 245)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(90, 90, 90)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnUpdate))
                        .addComponent(btnView))
                    .addContainerGap(246, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(242, 242, 242)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbHosptId, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                        .addComponent(lbHospName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbForLabId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtHospName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                        .addComponent(txtHospId, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtForLabId))
                    .addContainerGap(243, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(140, 140, 140)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate)
                        .addComponent(btnDelete)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(131, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(188, 188, 188)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbForLabId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtForLabId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHospId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbHosptId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHospName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbHospName, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(28, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
            boolean isValid = Validation();
            if (isValid) {
            int selectedRowIndex = HTable.getSelectedRow();
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row to update");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) HTable.getModel();
            ForensicLab selectedForensicLab = (ForensicLab) model.getValueAt(selectedRowIndex, 0);

            int forLabId = Integer.parseInt(txtForLabId.getText());
            int hospId = Integer.parseInt(txtHospId.getText());
            String hospName = txtHospName.getText();

            JOptionPane.showMessageDialog(this, "Forensic Lab Information Updated");
            //history.deleteEmployee(selectedEmployee);
            selectedForensicLab.setForLabId(forLabId);
            selectedForensicLab.setHospId(hospId);
            selectedForensicLab.setHospName(hospName);
             
            populateTable();
            txtForLabId.setText("");
            txtHospId.setText("");
            txtHospName.setText("");
            
            }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = HTable.getSelectedRow();

        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) HTable.getModel();
        ForensicLab selectedForensicLab = (ForensicLab)model.getValueAt(selectedRowIndex, 0);

        txtForLabId.setText(String.valueOf(selectedForensicLab.getForLabId()));
        txtHospId.setText(String.valueOf(selectedForensicLab.getHospId()));
        txtHospName.setText(selectedForensicLab.getHospName());
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = HTable.getSelectedRow();

        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) HTable.getModel();
        ForensicLab selectedForensicLab = (ForensicLab)model.getValueAt(selectedRowIndex, 0);

        forLabHistory.deleteForLab(selectedForensicLab);
        JOptionPane.showMessageDialog(this, "Forensic Lab deleted");

        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtHospNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospNameActionPerformed

    private void txtForLabIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtForLabIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtForLabIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbForLabId;
    private javax.swing.JLabel lbHospName;
    private javax.swing.JLabel lbHosptId;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTextField txtForLabId;
    private javax.swing.JTextField txtHospId;
    private javax.swing.JTextField txtHospName;
    // End of variables declaration//GEN-END:variables

private void populateTable() {
            DefaultTableModel model = (DefaultTableModel) HTable.getModel();
            model.setRowCount(0);

            for(ForensicLab e: forLabHistory.getForLabHistory()){

                Object[] row = new Object[5];
                row[0] = e;
                row[1] = e.getHospId();
                row[2] = e.getHospName();
                
                model.addRow(row);
            }
        }

        private boolean Validation() {
        
        if (txtForLabId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Forensic Lab ID");
            return false;
        } 
            
        try {
        Integer.parseInt(txtForLabId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Forensic Lab Id");
            
        }
                
        if (txtHospId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Hospital ID");
            return false;
        } else {
            if (txtHospId.getText().length() != 1) {
                JOptionPane.showMessageDialog(this, "Hospital ID should be only 1 digit");
                return false;
            }
        }
        
        try {
        Integer.parseInt(txtHospId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Hospital Id");
            
        }
        
        if (txtHospName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Hospital Name");
            return false;
        } else {
            if (!(txtHospName.getText().matches("[a-zA-Z]*[\\s]{1}[a-zA-Z].*"))) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Hospital Name");
                return false;
            }
        }
     return true;   
    }
        
}
