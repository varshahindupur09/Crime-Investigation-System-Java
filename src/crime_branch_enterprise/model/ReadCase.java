/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package crime_branch_enterprise.model;

import javax.swing.JPanel;
import model.Sys;
import ui.HomeScreen;


/**
 *
 * @author Sal <your.name at your.org>
 */
public class ReadCase extends javax.swing.JPanel {

    /**
     * Creates new form ReadCase
     */
    private JPanel readCase;
    private Sys sys;
    private HomeScreen homeScreen;
    
    
    public ReadCase() {
        initComponents();
    }
    
    public ReadCase ( JPanel readCase, Sys sys, HomeScreen homeScreen) 
    {    
        initComponents();
        this.readCase = readCase;
        this.sys = sys;
        this.homeScreen = homeScreen;
        
        setSize(1040, 544);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeadingLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AuthDirectoryTable = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();
        DescriptionLabel = new javax.swing.JLabel();
        DateOfReportDateChooser = new com.toedter.calendar.JDateChooser();
        DateOfReportLabel = new javax.swing.JLabel();
        PhoneNumberTextField = new javax.swing.JTextField();
        SelectFIRNumberLabel = new javax.swing.JLabel();
        SelectOfficerDropdown = new javax.swing.JComboBox<>();
        EmailIdLabel = new javax.swing.JLabel();
        EmailIdTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 51, 51));

        HeadingLabel.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        HeadingLabel.setText("CASE DIRECTORY");

        AuthDirectoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "DATE OF REPORT", "PHONE NUMBER", "EMAIL ID", "SELECTED OFFICER"
            }
        ));
        jScrollPane1.setViewportView(AuthDirectoryTable);

        updateBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        viewBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        viewBtn.setText("VIEW");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        DescriptionLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DescriptionLabel.setForeground(new java.awt.Color(255, 255, 255));
        DescriptionLabel.setText("Phone Number:");

        DateOfReportDateChooser.setDateFormatString("YYYY-MM-dd");

        DateOfReportLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DateOfReportLabel.setForeground(new java.awt.Color(255, 255, 255));
        DateOfReportLabel.setText("Date Of Report:");

        PhoneNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneNumberTextFieldActionPerformed(evt);
            }
        });
        PhoneNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PhoneNumberTextFieldKeyPressed(evt);
            }
        });

        SelectFIRNumberLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        SelectFIRNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        SelectFIRNumberLabel.setText("Select Officer:");

        EmailIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        EmailIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        EmailIdLabel.setText("Email Id:");

        EmailIdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailIdTextFieldActionPerformed(evt);
            }
        });
        EmailIdTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EmailIdTextFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SelectFIRNumberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SelectOfficerDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(EmailIdLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(EmailIdTextField))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(DateOfReportLabel)
                                .addComponent(DescriptionLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PhoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DateOfReportDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(406, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(716, 716, 716)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(287, 287, 287)
                            .addComponent(HeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(358, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DateOfReportLabel)
                    .addComponent(DateOfReportDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DescriptionLabel)
                    .addComponent(PhoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailIdLabel)
                    .addComponent(EmailIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SelectFIRNumberLabel)
                    .addComponent(SelectOfficerDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(148, 148, 148))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(HeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(40, 40, 40)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(70, 70, 70)
                    .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(163, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        //        boolean isValid = Validation();
        //        if (isValid) {
//            int selectedRowIndex = AuthDirectoryTable.getSelectedRow();
//            if (selectedRowIndex < 0) {
//                JOptionPane.showMessageDialog(this, "Please select a row to update");
//                return;
//            }

//            DefaultTableModel model = (DefaultTableModel) AuthDirectoryTable.getModel();
//            Author selectedAuthor = (Author) model.getValueAt(selectedRowIndex, 0);
//            String authId = NewAuthIdTxt.getText();
//            String authName = NewAuthNameTxt.getText();
//            int authAge = Integer.parseInt(NewAuthAgeTxt.getText());
//            int authYoe = Integer.parseInt(NewAuthYoeTxt.getText());
//            String authGender = NewAuthGenderTxt.getText();
//            String authDoj = NewAuthDojTxt.getText();
//
//            JOptionPane.showMessageDialog(this, "Doctor Information Updated");
//            //history.deleteEmployee(selectedEmployee);
//            selectedAuthor.setAuthorId(authId);
//            selectedAuthor.setAuthorName(authName);
//            selectedAuthor.setAuthorAge(authAge);
//            selectedAuthor.setAuthorGender(authGender);
//            selectedAuthor.setAuthorDateOfJoining(authDoj);
//            selectedAuthor.setAuthorYearsOfExperience(authYoe);
//
//            populateTable();
//
//            NewAuthIdTxt.setText("");
//            NewAuthNameTxt.setText("");
//            NewAuthAgeTxt.setText("");
//            NewAuthYoeTxt.setText("");
//            NewAuthGenderTxt.setText("");
//            NewAuthDojTxt.setText("");
            //}
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
//        int selectedRowIndex = AuthDirectoryTable.getSelectedRow();
//
//        if(selectedRowIndex <0){
//            JOptionPane.showMessageDialog(this, "Please enter the row you want to delete");
//            return;
//        }
//
//        DefaultTableModel model = (DefaultTableModel) AuthDirectoryTable.getModel();
//        Author author = (Author) model.getValueAt(selectedRowIndex,0);
//
//        authHistory.deleteAuthor(author);
//
//        JOptionPane.showMessageDialog(this, "Requested Record is Deleted");
//        populateTable();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:

//        int selectedRowIndex = AuthDirectoryTable.getSelectedRow();
//        if(selectedRowIndex <0){
//            JOptionPane.showMessageDialog(this, "Please enter the row you want to view");
//            return;
//        }
//
//        DefaultTableModel model = (DefaultTableModel) AuthDirectoryTable.getModel();
//        Author author = (Author) model.getValueAt(selectedRowIndex,0);
//
//        NewAuthIdTxt.setText(String.valueOf(author.getAuthorId()));
//        NewAuthNameTxt.setText(String.valueOf(author.getAuthorName()));
//        NewAuthAgeTxt.setText(String.valueOf(author.getAuthorAge()));
//        NewAuthYoeTxt.setText(String.valueOf(author.getAuthorYearsOfExperience()));
//        NewAuthGenderTxt.setText(String.valueOf(author.getAuthorGender()));
//        NewAuthDojTxt.setText(String.valueOf(author.getAuthorDateOfJoining()));
    }//GEN-LAST:event_viewBtnActionPerformed

    private void PhoneNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneNumberTextFieldActionPerformed

    private void PhoneNumberTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PhoneNumberTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneNumberTextFieldKeyPressed

    private void EmailIdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailIdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailIdTextFieldActionPerformed

    private void EmailIdTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailIdTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailIdTextFieldKeyPressed

//    private void populateTable() {
//
//        DefaultTableModel model = (DefaultTableModel) OfficerDirectoryTable.getModel();
//        model.setRowCount(0);
//
//        for (OfficerRecord off : officerDir.getOfficerList()) {
//
//            Object[] row = new Object[7];
//            row[0] = off;
//            row[1] = off.getOfficerName();
//            row[2] = off.getOfficerEmail();
//            row[3] = off.getOfficerPhoneNumber();
//            row[4] = off.getOfficerAddress();
//
//            model.addRow(row);
//
//        }
//    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AuthDirectoryTable;
    private com.toedter.calendar.JDateChooser DateOfReportDateChooser;
    private javax.swing.JLabel DateOfReportLabel;
    private javax.swing.JLabel DescriptionLabel;
    private javax.swing.JLabel EmailIdLabel;
    private javax.swing.JTextField EmailIdTextField;
    private javax.swing.JLabel HeadingLabel;
    private javax.swing.JTextField PhoneNumberTextField;
    private javax.swing.JLabel SelectFIRNumberLabel;
    private javax.swing.JComboBox<String> SelectOfficerDropdown;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
